{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\Desktop\\\\coaching project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmound\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'Remove',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"/9NfHkzRcS4ZBUY4y/fayBXiE2o=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Shivam/Desktop/coaching project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","updatedTotalAmound","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEI,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAKJ,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAClC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EACA;AACI,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAmBN,MAAM,CAACI,IAAP,CAAYG,MAA9E;AACA,WAAO;AACHX,MAAAA,KAAK,EAACM,YADH;AAEHL,MAAAA,WAAW,EAACW;AAFT,KAAP;AAKH;;AACD,SAAOb,gBAAP;AACH,CAZD;;AAcA,MAAMc,YAAY,GAAGC,KAAK,IAAG;AAAA;;AAEzB,QAAO,CAAEC,SAAF,EAAaC,kBAAb,IAAoClB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAArD;;AAKA,QAAMkB,oBAAoB,GAAGT,IAAI,IAAG;AAChCQ,IAAAA,kBAAkB,CAAC;AACfX,MAAAA,IAAI,EAAC,KADU;AAEfG,MAAAA,IAAI,EAACA;AAFU,KAAD,CAAlB;AAIH,GALD;;AAOA,QAAMU,yBAAyB,GAAGC,EAAE,IAAG;AACnCH,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAC,QAAN;AAAgBc,MAAAA,EAAE,EAACA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAChBpB,IAAAA,KAAK,EAACe,SAAS,CAACf,KADA;AAEhBC,IAAAA,WAAW,EAACc,SAAS,CAACd,WAFN;AAGhBoB,IAAAA,OAAO,EAACJ,oBAHQ;AAIhBK,IAAAA,UAAU,EAACJ;AAJK,GAApB;AAQA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA/BD;;GAAMV,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import CartContext from './cart-context'\r\nimport { useReducer } from 'react';\r\n\r\n    const defaultCartState = {\r\n        items:[],\r\n        totalAmount:0\r\n    };\r\n\r\nconst cartReducer = (state, action) =>{\r\n    if(action.type==='ADD')\r\n    {\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price *action.item.amount;\r\n        return {\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmound\r\n        };\r\n\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = props =>{\r\n    \r\n    const  [ cartState, dispatchCartAction ] = useReducer(cartReducer, defaultCartState);\r\n\r\n    \r\n\r\n    \r\n    const addItemToCartHandler = item =>{\r\n        dispatchCartAction({\r\n            type:'ADD',\r\n            item:item\r\n        });\r\n    };\r\n\r\n    const removeItemFromCartHandler = id =>{\r\n        dispatchCartAction({type:'Remove', id:id})\r\n    }\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:addItemToCartHandler,\r\n        removeItem:removeItemFromCartHandler\r\n    }\r\n\r\n\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}